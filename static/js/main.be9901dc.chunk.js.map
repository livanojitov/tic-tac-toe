{"version":3,"sources":["hooks/useFetchData.js","contexts/CategoryContext.js","store/game/gameTypes.js","store/game/gameReducer.js","Constants.js","store/game/gameActions.js","contexts/GameContext.js","store/gameDB/gameDBTypes.js","store/gameDB/gameDBReducer.js","hooks/useLocalStorage.js","contexts/GameDBContext.js","hooks/useLanguage.js","contexts/DictionaryContext.js","components/Header/Header.js","components/Navigation/Navigation.js","components/Category/Category.js","hooks/useImages.js","components/Images/Images.js","components/StartGame/StartGame.js","components/Level/Level.js","components/Board/Square.js","components/Board/Computer.js","components/Board/Board.js","hooks/useBoardUI.js","components/Board/BoardUI.js","hooks/useGame.js","store/gameDB/gameDBActions.js","components/Game/Game.js","components/Board/Historical.js","components/Category/Historical.js","components/Images/Historical.js","components/Level/Historical.js","components/StartGame/Historical.js","components/Game/Historical.js","components/Historical/Historical.js","components/Repository/Repository.js","components/About/About.js","components/Contact/Contact.js","App.js","index.js"],"names":["useFetchData","jsonFile","useState","data","setData","error","setError","useEffect","mounted","a","axios","get","res","fetchData","CategoryContext","createContext","CategoryContextProvider","children","categories","className","data-testid","Provider","value","CHANGE_CATEGORY","CHANGE_DISABLED","CHANGE_FIRST","CHANGE_IMAGES","CHANGE_LEVEL","CHANGE_OVER","gameReducer","state","action","newState","category","images","type","disabled","first","level","over","IMAGES_PER_CATEGORY","changeCategory","changeDisabled","changeOver","GameContext","initialState","id","folder","name","user","Math","floor","random","computer","GameContextProvider","useReducer","game","dispatch","useContext","length","ADD_GAME","REMOVE_GAME","gameDBReducer","filter","useLocalStorage","key","initialValue","isLoading","useRef","current","gamesJson","window","localStorage","getItem","JSON","parse","games","setItem","stringify","GameDBContext","GameDBContextProvider","getGame","useLanguage","lang","language","setLanguage","changeLanguageHandler","useCallback","DictionaryContext","DictionaryContextProvider","dictionary","Header","url","english","french","spanish","src","onClick","alt","title","Navigation","renderCheckbox","inputRef","ref","htmlFor","checked","exact","to","GAME","HISTORY","REPOSITORY","ABOUT","CONTACT","defaultProps","Category","useMemo","CATEGORY","onChange","e","target","map","useImages","setImages","randomImage","image","refreshImage","Images","imageUser","imageComputer","changeImages","YOU","USER_IMAGE_TOOLTIP","REFRESH_TOOLTIP","OPPONENT","COMPUTER_IMAGE_TOOLTIP","StartGame","START_TOOLTIP","START","defaultValue","YES","NO","Level","LEVEL_TOOLTIP","LEVEL","LEVEL_EASY","LEVEL_HARD","Square","React","memo","win","firebaseUrl","style","backgroundImage","Computer","board","canWinInTwoMovesDouble","squares","playSecondTime","players","square","place","playRandomly","playSmart","canWinInTwoMovesSingle","squareComputer","isAboutToWin","squaresUser","indexOf","playContinue","playHard","moves","isEmpty","emptySquares","play","this","INVALID_PLAYER_TXT","_first","_level","_moves","player","checkPlayer","square0","square1","square2","arr","result","i","push","square3","square4","Array","fill","Error","includes","reduce","index","winners","useBoardUI","onGameOver","categoryId","setPlayers","isAWinner","isFull","reset","BoardUI","ind","isDisabled","useGame","dispatchGame","gameInitHandler","gameOverHandler","addGame","Game","GAME_OVER","MESSAGE_LOST","MESSAGE_WON","MESSAGE_DRAW","PLAY_AGAIN","PLAY","Historical","LEVEL_NORMAL","STARTED_BY","STARTED_BY_COMPUTER","STARTED_BY_PLAYER","history","match","params","SEE_GAME","DELETE_GAME","removeGame","BACK","historical","NO_HISTORY_YET","Repository","About","techStackLi","tech","href","rel","source","gamesLi","GAME_WRITTEN_WITH","SOURCE_CODE","OTHER_GAMES","Contact","contact","AUTHOR","EMAIL","GITHUB","LINKEDIN","App","basename","path","component","GameHistorical","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be9901dc.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction useFetchData(jsonFile) {\r\n  const [data, setData] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `https://tic-tac-toe-974b0.firebaseio.com/${jsonFile}.json`\r\n        );\r\n        if (mounted) {\r\n          setData(res.data);\r\n          setError(\"\");\r\n        }\r\n      } catch (e) {\r\n        if (mounted) {\r\n          setError(\r\n            `Error while fetching the ${jsonFile}.json file from the Google Cloud`\r\n          );\r\n          setData(\"\");\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [jsonFile]);\r\n\r\n  return { data, error };\r\n}\r\n\r\nexport default useFetchData;\r\n","import React, { createContext } from \"react\";\r\nimport useFetchData from \"../hooks/useFetchData\";\r\n\r\nexport const CategoryContext = createContext();\r\n\r\nconst CategoryContextProvider = ({ children }) => {\r\n  let { data: categories, error } = useFetchData(\"categories\");\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error\" data-testid=\"error\">\r\n        {error}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CategoryContext.Provider value={{ categories }}>\r\n      {children}\r\n    </CategoryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoryContextProvider;\r\n","export const CHANGE_CATEGORY = \"CHANGE_CATEGORY\";\r\nexport const CHANGE_DISABLED = \"CHANGE_DISABLED\";\r\nexport const CHANGE_FIRST = \"CHANGE_FIRST\";\r\nexport const CHANGE_IMAGES = \"CHANGE_IMAGES\";\r\nexport const CHANGE_LEVEL = \"CHANGE_LEVEL\";\r\nexport const CHANGE_OVER = \"CHANGE_OVER\";\r\n","import {\r\n  CHANGE_CATEGORY,\r\n  CHANGE_DISABLED,\r\n  CHANGE_FIRST,\r\n  CHANGE_IMAGES,\r\n  CHANGE_LEVEL,\r\n  CHANGE_OVER,\r\n} from \"./gameTypes\";\r\n\r\nexport const gameReducer = (state, action) => {\r\n  const newState = {\r\n    ...state,\r\n    category: {\r\n      ...state.category,\r\n    },\r\n    images: {\r\n      ...state.images,\r\n    },\r\n  };\r\n\r\n  switch (action.type) {\r\n    case CHANGE_CATEGORY:\r\n      return {\r\n        ...newState,\r\n        category: {\r\n          ...action.category,\r\n        },\r\n      };\r\n\r\n    case CHANGE_DISABLED:\r\n      return {\r\n        ...newState,\r\n        disabled: action.disabled,\r\n      };\r\n\r\n    case CHANGE_FIRST:\r\n      return {\r\n        ...newState,\r\n        first: action.first,\r\n      };\r\n\r\n    case CHANGE_IMAGES:\r\n      return {\r\n        ...newState,\r\n        images: {\r\n          ...action.images,\r\n        },\r\n      };\r\n\r\n    case CHANGE_LEVEL:\r\n      return {\r\n        ...newState,\r\n        level: action.level,\r\n      };\r\n\r\n    case CHANGE_OVER:\r\n      return {\r\n        ...newState,\r\n        over: action.over,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const EMPTY = 0;\r\nconst COMPUTER = 1;\r\nconst USER = 2;\r\nconst TOTAL_SQUARES = 9;\r\nconst RANDOM = 1;\r\nconst HARD = 2;\r\nconst LOST = 0;\r\nconst WON = 1;\r\nconst DRAW = 2;\r\nconst UNKNOWN = 3;\r\nconst ENGLISH = 0;\r\nconst FRENCH = 1;\r\nconst SPANISH = 2;\r\nconst IMAGES_PER_CATEGORY = 20;\r\n\r\nexport {\r\n  EMPTY,\r\n  COMPUTER,\r\n  USER,\r\n  RANDOM,\r\n  HARD,\r\n  TOTAL_SQUARES,\r\n  LOST,\r\n  WON,\r\n  DRAW,\r\n  UNKNOWN,\r\n  ENGLISH,\r\n  FRENCH,\r\n  SPANISH,\r\n  IMAGES_PER_CATEGORY,\r\n};\r\n","import {\r\n  CHANGE_CATEGORY,\r\n  CHANGE_DISABLED,\r\n  CHANGE_FIRST,\r\n  CHANGE_IMAGES,\r\n  CHANGE_LEVEL,\r\n  CHANGE_OVER,\r\n} from \"./gameTypes\";\r\n\r\nexport const changeCategory = (category) => {\r\n  return {\r\n    type: CHANGE_CATEGORY,\r\n    category,\r\n  };\r\n};\r\n\r\nexport const changeDisabled = (disabled) => {\r\n  return {\r\n    type: CHANGE_DISABLED,\r\n    disabled,\r\n  };\r\n};\r\n\r\nexport const changeFirst = (first) => {\r\n  return {\r\n    type: CHANGE_FIRST,\r\n    first,\r\n  };\r\n};\r\n\r\nexport const changeImages = (images) => {\r\n  return {\r\n    type: CHANGE_IMAGES,\r\n    images,\r\n  };\r\n};\r\n\r\nexport const changeLevel = (level) => {\r\n  return {\r\n    type: CHANGE_LEVEL,\r\n    level,\r\n  };\r\n};\r\n\r\nexport const changeOver = (over) => {\r\n  return {\r\n    type: CHANGE_OVER,\r\n    over,\r\n  };\r\n};\r\n","import React, { createContext, useContext, useEffect, useReducer } from \"react\";\r\nimport { CategoryContext } from \"./CategoryContext\";\r\nimport { gameReducer } from \"../store/game/gameReducer\";\r\nimport { USER, RANDOM, IMAGES_PER_CATEGORY } from \"../Constants\";\r\nimport { changeCategory } from \"../store/game/gameActions\";\r\n\r\nexport const GameContext = createContext();\r\n\r\nconst initialState = {\r\n  category: {\r\n    id: 5,\r\n    folder: \"soccer\",\r\n    name: \"SOCCER_PLAYERS\",\r\n  },\r\n\r\n  images: {\r\n    user: Math.floor(Math.random() * IMAGES_PER_CATEGORY),\r\n    computer: Math.floor(Math.random() * IMAGES_PER_CATEGORY),\r\n  },\r\n\r\n  first: USER,\r\n\r\n  level: RANDOM,\r\n\r\n  disabled: true,\r\n\r\n  over: false,\r\n};\r\n\r\nconst GameContextProvider = ({ children }) => {\r\n  const [game, dispatch] = useReducer(gameReducer, initialState);\r\n  const { categories } = useContext(CategoryContext);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      changeCategory(categories[Math.floor(Math.random() * categories.length)])\r\n    );\r\n  }, [categories]);\r\n\r\n  return (\r\n    <GameContext.Provider value={{ game, dispatch }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GameContextProvider;\r\n","export const ADD_GAME = \"ADD_GAME\";\r\nexport const REMOVE_GAME = \"REMOVE_GAME\";\r\n","import { ADD_GAME, REMOVE_GAME } from \"./gameDBTypes\";\r\n\r\nexport const gameDBReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_GAME:\r\n      action.game.id = state.length === 0 ? 0 : state[state.length - 1].id + 1;\r\n      return [...state, action.game];\r\n\r\n    case REMOVE_GAME:\r\n      return state.filter((game) => game.id !== action.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { useReducer, useEffect, useRef } from \"react\";\r\nimport { gameDBReducer } from \"../store/gameDB/gameDBReducer\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  const isLoading = useRef(false);\r\n\r\n  const [games, dispatch] = useReducer(gameDBReducer, [], () => {\r\n    try {\r\n      isLoading.current = true;\r\n\r\n      const gamesJson = window.localStorage.getItem(key);\r\n\r\n      return gamesJson ? JSON.parse(gamesJson) : initialValue;\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isLoading.current) {\r\n      isLoading.current = false;\r\n\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem(key, JSON.stringify(games));\r\n  }, [key, games]);\r\n\r\n  return { games, dispatch };\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { createContext } from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nexport const GameDBContext = createContext();\r\n\r\nconst GameDBContextProvider = ({ children }) => {\r\n  const { games, dispatch } = useLocalStorage(\"tictactoe\", []);\r\n\r\n  const getGame = (id) => {\r\n    if (games.length > 0) {\r\n      return games.filter((game) => game.id === id)[0];\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameDBContext.Provider value={{ games, dispatch, getGame }}>\r\n      {children}\r\n    </GameDBContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GameDBContextProvider;\r\n","import { useState, useCallback } from \"react\";\r\nimport { ENGLISH } from \"../Constants\";\r\n\r\nfunction useLanguage(lang = ENGLISH) {\r\n  const [language, setLanguage] = useState(lang);\r\n\r\n  const changeLanguageHandler = useCallback((language) => {\r\n    setLanguage(language);\r\n  }, []);\r\n\r\n  return [language, changeLanguageHandler];\r\n}\r\n\r\nexport default useLanguage;\r\n","import React, { createContext } from \"react\";\r\nimport useFetchData from \"../hooks/useFetchData\";\r\nimport useLanguage from \"../hooks/useLanguage\";\r\nimport * as constants from \"../Constants\";\r\n\r\nexport const DictionaryContext = createContext();\r\n\r\nconst DictionaryContextProvider = ({ children }) => {\r\n  let { data: dictionary, error } = useFetchData(\"dictionary\");\r\n\r\n  const [language, changeLanguageHandler] = useLanguage(constants.ENGLISH);\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error\" data-testid=\"error\">\r\n        {error}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  dictionary = dictionary[language];\r\n\r\n  return (\r\n    <DictionaryContext.Provider value={{ dictionary, changeLanguageHandler }}>\r\n      {children}\r\n    </DictionaryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DictionaryContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport * as constants from \"../../Constants\";\r\nimport \"./Header.scss\";\r\n\r\nconst { ENGLISH, FRENCH, SPANISH } = constants;\r\n\r\nconst Header = () => {\r\n  const { dictionary, changeLanguageHandler } = useContext(DictionaryContext);\r\n\r\n  if (dictionary) {\r\n    const url =\r\n      \"https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images\";\r\n    const english = dictionary[\"ENGLISH_HINT\"];\r\n    const french = dictionary[\"FRENCH_HINT\"];\r\n    const spanish = dictionary[\"SPANISH_HINT\"];\r\n\r\n    return (\r\n      <header>\r\n        <div className=\"flags\" data-testid=\"flags\">\r\n          <img\r\n            data-testid=\"english\"\r\n            src={`${url}%2Fflags%2Fusa.jpg?alt=media`}\r\n            onClick={() => {\r\n              changeLanguageHandler(ENGLISH);\r\n            }}\r\n            alt={english}\r\n            title={english}\r\n          />\r\n          <img\r\n            data-testid=\"french\"\r\n            src={`${url}%2Fflags%2Ffrance.jpg?alt=media`}\r\n            onClick={() => {\r\n              changeLanguageHandler(FRENCH);\r\n            }}\r\n            alt={french}\r\n            title={french}\r\n          />\r\n          <img\r\n            data-testid=\"spanish\"\r\n            src={`${url}%2Fflags%2Fspain.jpg?alt=media`}\r\n            onClick={() => {\r\n              changeLanguageHandler(SPANISH);\r\n            }}\r\n            alt={spanish}\r\n            title={spanish}\r\n          />\r\n        </div>\r\n      </header>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport \"./Navigation.scss\";\r\n\r\nconst Navigation = ({ renderCheckbox }) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  const inputRef = useRef(null);\r\n\r\n  function collapseMobileMenu() {\r\n    if (inputRef.current) {\r\n      inputRef.current.checked = false;\r\n    }\r\n  }\r\n\r\n  return dictionary ? (\r\n    <nav>\r\n      {renderCheckbox && (\r\n        <input\r\n          data-testid=\"mobile-menu-chk\"\r\n          type=\"checkbox\"\r\n          id=\"menu\"\r\n          ref={inputRef}\r\n        />\r\n      )}\r\n      <label className=\"mylabel\" htmlFor=\"menu\">\r\n        <div id=\"burger-container\">\r\n          <div id=\"burger\">\r\n            <span>&nbsp;</span>\r\n            <span>&nbsp;</span>\r\n            <span>&nbsp;</span>\r\n          </div>\r\n        </div>\r\n      </label>\r\n      <ul data-testid=\"nav\" className=\"nav\" onClick={collapseMobileMenu}>\r\n        <li key=\"0\">\r\n          <NavLink data-testid=\"game\" exact to={\"/\"}>\r\n            {dictionary.GAME}{\" \"}\r\n          </NavLink>\r\n        </li>\r\n        <li key=\"1\">\r\n          <NavLink data-testid=\"historical\" exact to={\"/historical\"}>\r\n            {dictionary.HISTORY}{\" \"}\r\n          </NavLink>\r\n        </li>\r\n        <li key=\"2\">\r\n          <NavLink data-testid=\"repository\" exact to={\"/repository\"}>\r\n            {dictionary.REPOSITORY}\r\n          </NavLink>\r\n        </li>\r\n        <li key=\"3\">\r\n          <NavLink data-testid=\"about\" exact to={\"/about\"}>\r\n            {dictionary.ABOUT}{\" \"}\r\n          </NavLink>\r\n        </li>\r\n        <li key=\"4\">\r\n          <NavLink data-testid=\"contact\" exact to={\"/contact\"}>\r\n            {dictionary.CONTACT}{\" \"}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  ) : null;\r\n};\r\n\r\nNavigation.defaultProps = {\r\n  renderCheckbox: true,\r\n};\r\n\r\nNavigation.propTypes = {\r\n  renderCheckbox: PropTypes.bool,\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useContext, useMemo } from \"react\";\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport { GameContext } from \"../../contexts/GameContext\";\r\nimport { changeCategory } from \"../../store/game/gameActions\";\r\nimport \"./Category.scss\";\r\n\r\nconst Category = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  const { game, dispatch } = useContext(GameContext);\r\n\r\n  return useMemo(() => {\r\n    return dictionary && categories ? (\r\n      <div className=\"categories\" data-testid=\"categories\">\r\n        <span data-testid=\"description\">{dictionary.CATEGORY}: </span>\r\n        <select\r\n          data-testid=\"select\"\r\n          value={game.category.id}\r\n          onChange={(e) => {\r\n            dispatch(changeCategory(categories[e.target.value]));\r\n          }}\r\n        >\r\n          {categories.map((category) => {\r\n            return (\r\n              <option\r\n                key={category.id}\r\n                value={category.id}\r\n                data-testid=\"select-option\"\r\n              >\r\n                {dictionary[category.name]}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    ) : null;\r\n  }, [categories, dictionary, dispatch, game.category.id]);\r\n};\r\n\r\nexport default Category;\r\n","import { useState, useCallback } from \"react\";\r\nimport { IMAGES_PER_CATEGORY } from \"../Constants\";\r\n\r\nfunction useImages(user = 0, computer = 1) {\r\n  const [images, setImages] = useState({ user, computer });\r\n\r\n  const randomImage = useCallback(() => {\r\n    let image = Math.floor(Math.random() * IMAGES_PER_CATEGORY);\r\n    while (image === images.computer || image === images.user) {\r\n      image = Math.floor(Math.random() * IMAGES_PER_CATEGORY);\r\n    }\r\n    return image;\r\n  }, [images.computer, images.user]);\r\n\r\n  const refreshImage = useCallback(\r\n    (e) => {\r\n      setImages({\r\n        ...images,\r\n        [e.target.id]: randomImage(),\r\n      });\r\n    },\r\n    [images, randomImage]\r\n  );\r\n\r\n  if (images.user === images.computer) {\r\n    setImages({\r\n      ...images,\r\n      user: randomImage(),\r\n    });\r\n  }\r\n\r\n  return { images, refreshImage };\r\n}\r\n\r\nexport default useImages;\r\n","import React, { useContext, useEffect, useMemo } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport { GameContext } from \"../../contexts/GameContext\";\r\nimport { changeImages } from \"../../store/game/gameActions\";\r\nimport useImages from \"../../hooks/useImages\";\r\nimport \"./Images.scss\";\r\n\r\nconst Images = () => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  const { game, dispatch } = useContext(GameContext);\r\n  const folder = game.category.folder;\r\n\r\n  const url =\r\n    \"https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images\";\r\n  const { images, refreshImage } = useImages(\r\n    game.images.user,\r\n    game.images.computer\r\n  );\r\n  const { user: imageUser, computer: imageComputer } = images;\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      changeImages({\r\n        user: imageUser,\r\n        computer: imageComputer,\r\n      })\r\n    );\r\n  }, [imageUser, imageComputer, dispatch]);\r\n\r\n  return useMemo(() => {\r\n    return dictionary && folder ? (\r\n      <div className=\"images\" data-testid=\"images\">\r\n        <div className=\"user-image\">\r\n          <span>{dictionary.YOU}: </span>\r\n          <img\r\n            className=\"image-token\"\r\n            src={`${url}%2F${folder}%2F${imageUser}.jpg?alt=media`}\r\n            alt=\"user\"\r\n            title={dictionary.USER_IMAGE_TOOLTIP}\r\n          />\r\n          <img\r\n            className=\"refresh\"\r\n            id=\"user\"\r\n            src={`${url}%2Frefresh.png?alt=media`}\r\n            alt=\"refresh\"\r\n            onClick={(e) => refreshImage(e)}\r\n            title={dictionary.REFRESH_TOOLTIP}\r\n            data-testid=\"user-image\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"computer-image\">\r\n          <span>{dictionary.OPPONENT}: </span>\r\n          <img\r\n            className=\"image-token\"\r\n            src={`${url}%2F${folder}%2F${imageComputer}.jpg?alt=media`}\r\n            alt=\"computer\"\r\n            title={dictionary.COMPUTER_IMAGE_TOOLTIP}\r\n          />\r\n          <img\r\n            className=\"refresh\"\r\n            id=\"computer\"\r\n            src={`${url}%2Frefresh.png?alt=media`}\r\n            alt=\"refresh\"\r\n            onClick={(e) => refreshImage(e)}\r\n            title={dictionary.REFRESH_TOOLTIP}\r\n            data-testid=\"computer-image\"\r\n          />\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }, [dictionary, imageUser, imageComputer, refreshImage, folder]);\r\n};\r\n\r\nexport default Images;\r\n","import React, { useContext, useMemo } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport { GameContext } from \"../../contexts/GameContext\";\r\nimport { changeFirst } from \"../../store/game/gameActions\";\r\nimport { USER, COMPUTER } from \"../../Constants\";\r\nimport \"./StartGame.scss\";\r\n\r\nconst StartGame = () => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  const { game, dispatch } = useContext(GameContext);\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <div className=\"start\" data-testid=\"startgame\">\r\n        <span title={dictionary.START_TOOLTIP}>{dictionary.START}?</span>\r\n        <select\r\n          data-testid=\"select\"\r\n          defaultValue={game.first}\r\n          onChange={(e) => {\r\n            dispatch(changeFirst(e.target.value * 1));\r\n          }}\r\n          disabled={!game.disabled}\r\n        >\r\n          <option data-testid=\"select-option\" key={0} value={USER}>\r\n            {dictionary.YES}\r\n          </option>\r\n          <option data-testid=\"select-option\" key={1} value={COMPUTER}>\r\n            {dictionary.NO}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }, [dictionary, game.first, game.disabled, dispatch]);\r\n};\r\n\r\nexport default StartGame;\r\n","import React, { useContext, useMemo } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport { GameContext } from \"../../contexts/GameContext\";\r\nimport { changeLevel } from \"../../store/game/gameActions\";\r\nimport { RANDOM, HARD } from \"../../Constants\";\r\nimport \"./Level.scss\";\r\n\r\nconst Level = () => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  const { game, dispatch } = useContext(GameContext);\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <div className=\"level\" data-testid=\"level\">\r\n        <span title={dictionary.LEVEL_TOOLTIP}>{dictionary.LEVEL}?</span>\r\n        <select\r\n          data-testid=\"select\"\r\n          defaultValue={game.level}\r\n          onChange={(e) => {\r\n            dispatch(changeLevel(e.target.value * 1));\r\n          }}\r\n          disabled={!game.disabled}\r\n        >\r\n          <option data-testid=\"select-option\" key={RANDOM} value={RANDOM}>\r\n            {\" \"}\r\n            {dictionary.LEVEL_EASY}\r\n          </option>\r\n          <option data-testid=\"select-option\" key={HARD} value={HARD}>\r\n            {\" \"}\r\n            {dictionary.LEVEL_HARD}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }, [dictionary, game.disabled, game.level, dispatch]);\r\n};\r\n\r\nexport default Level;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Board.scss\";\r\n\r\nconst Square = React.memo(({ disabled, id, image, win }) => {\r\n  const firebaseUrl = `url(https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images%2F${image}.jpg?alt=media)`;\r\n\r\n  return (\r\n    <button\r\n      className={win}\r\n      data-testid=\"square\"\r\n      disabled={disabled}\r\n      id={id}\r\n      style={{ backgroundImage: firebaseUrl }}\r\n    ></button>\r\n  );\r\n});\r\n\r\nSquare.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  id: PropTypes.number,\r\n  image: PropTypes.string,\r\n  win: PropTypes.string,\r\n};\r\n\r\nexport default Square;\r\n","import * as constants from \"../../Constants\";\r\n\r\nconst { EMPTY, USER, COMPUTER, HARD } = constants;\r\n\r\nclass Computer {\r\n  constructor(board) {\r\n    this.board = board;\r\n  }\r\n\r\n  canWinInTwoMovesDouble = () => {\r\n    let squares = this.board.canWinInTwoMovesDouble(COMPUTER);\r\n\r\n    if (squares !== -1) {\r\n      return squares[Math.floor(Math.random() * squares.length)];\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  playSecondTime = () => {\r\n    const players = this.board.players;\r\n\r\n    if (players[4] === COMPUTER) {\r\n      let square = [0, 2, 6, 8][Math.floor(Math.random() * 4)];\r\n      while (players[square] !== EMPTY) {\r\n        square = [0, 2, 6, 8][Math.floor(Math.random() * 4)];\r\n      }\r\n      this.board.place(COMPUTER, square);\r\n    } else if (players[4] === USER) {\r\n      this.playRandomly();\r\n    } else {\r\n      this.board.place(COMPUTER, 4);\r\n    }\r\n  };\r\n\r\n  playSmart = () => {\r\n    let squares = this.board.canWinInTwoMovesSingle(COMPUTER);\r\n    if (squares !== -1) {\r\n      for (let square = 0; square < squares.length; square++) {\r\n        this.board.place(COMPUTER, squares[square]);\r\n        let squareComputer = this.board.isAboutToWin(COMPUTER);\r\n        let squaresUser = this.board.canWinInTwoMovesDouble(USER);\r\n        if (squaresUser !== -1 && squaresUser.indexOf(squareComputer) !== -1) {\r\n          this.board.place(EMPTY, squares[square]);\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  playContinue = () => {\r\n    let square;\r\n\r\n    if ((square = this.board.isAboutToWin(COMPUTER)) !== -1) {\r\n      return this.board.place(COMPUTER, square);\r\n    } else if ((square = this.board.isAboutToWin(USER)) !== -1) {\r\n      return this.board.place(COMPUTER, square);\r\n    } else if ((square = this.canWinInTwoMovesDouble()) !== -1) {\r\n      return this.board.place(COMPUTER, square);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  playHard = () => {\r\n    const players = this.board.players;\r\n    let moves = this.board.moves;\r\n\r\n    switch (this.board.first) {\r\n      case USER:\r\n        if (moves === 1) {\r\n          this.board.place(\r\n            COMPUTER,\r\n            players[4] === USER\r\n              ? [0, 2, 6, 8][Math.floor(Math.random() * 4)]\r\n              : 4\r\n          );\r\n        } else {\r\n          if (this.playContinue()) {\r\n            break;\r\n          }\r\n          if (this.playSmart()) {\r\n            break;\r\n          }\r\n          this.playRandomly();\r\n        }\r\n        break;\r\n\r\n      case COMPUTER:\r\n        if (this.board.isEmpty) {\r\n          this.board.place(\r\n            COMPUTER,\r\n            [0, 2, 6, 8, 4][Math.floor(Math.random() * 5)]\r\n          );\r\n        } else if (moves === 2) {\r\n          this.playSecondTime();\r\n        } else {\r\n          if (this.playContinue()) {\r\n            break;\r\n          }\r\n          let squares = this.board.canWinInTwoMovesSingle(COMPUTER);\r\n          if (squares !== -1) {\r\n            this.board.place(\r\n              COMPUTER,\r\n              squares[Math.floor(Math.random() * squares.length)]\r\n            );\r\n            break;\r\n          }\r\n          this.playRandomly();\r\n        }\r\n        break;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  playRandomly = () => {\r\n    const squares = this.board.emptySquares;\r\n\r\n    this.board.place(\r\n      COMPUTER,\r\n      squares[Math.floor(Math.random() * squares.length)]\r\n    );\r\n  };\r\n\r\n  play = () => {\r\n    const level = this.board.level;\r\n\r\n    if (level === HARD) {\r\n      this.playHard();\r\n    } else {\r\n      this.playRandomly();\r\n    }\r\n  };\r\n}\r\n\r\nexport default Computer;\r\n","import * as constants from \"../../Constants\";\r\nconst { EMPTY, USER, COMPUTER, RANDOM, HARD, TOTAL_SQUARES } = constants;\r\n\r\nexport const INVALID_LEVEL_TXT = \"Invalid level\";\r\nexport const INVALID_PLAYER_TXT = \"Invalid player\";\r\nexport const INVALID_SQUARE_TXT = \"Invalid square\";\r\n\r\nlet board = null;\r\nlet _first = USER;\r\nlet _level = RANDOM;\r\nlet _moves = 0;\r\n\r\nclass Board {\r\n  constructor(first = USER, level = RANDOM) {\r\n    board = Array(TOTAL_SQUARES).fill(EMPTY);\r\n    _first = first;\r\n    _level = level;\r\n  }\r\n\r\n  get level() {\r\n    return _level;\r\n  }\r\n\r\n  set level(level) {\r\n    if (level !== RANDOM && level !== HARD) {\r\n      throw new Error(INVALID_LEVEL_TXT);\r\n    }\r\n    _level = level;\r\n  }\r\n\r\n  get first() {\r\n    return _first;\r\n  }\r\n\r\n  set first(first) {\r\n    if (first !== COMPUTER && first !== USER) {\r\n      throw new Error(INVALID_PLAYER_TXT);\r\n    }\r\n    _first = first;\r\n  }\r\n\r\n  get moves() {\r\n    return _moves;\r\n  }\r\n\r\n  get isFull() {\r\n    return !board.includes(EMPTY);\r\n  }\r\n\r\n  get isEmpty() {\r\n    return !(board.includes(COMPUTER) || board.includes(USER));\r\n  }\r\n\r\n  get emptySquares() {\r\n    return board.reduce((arr, square, index) => {\r\n      if (square === EMPTY) {\r\n        arr.push(index);\r\n      }\r\n      return arr;\r\n    }, []);\r\n  }\r\n\r\n  get players() {\r\n    return [...board];\r\n  }\r\n\r\n  reset() {\r\n    board.fill(EMPTY);\r\n    _moves = 0;\r\n  }\r\n\r\n  checkPlayer(player) {\r\n    if (player !== COMPUTER && player !== USER && player !== EMPTY) {\r\n      throw new Error(INVALID_PLAYER_TXT);\r\n    }\r\n  }\r\n\r\n  place(player, square) {\r\n    if (square < 0 || square > board.length) {\r\n      throw new Error(INVALID_SQUARE_TXT);\r\n    }\r\n\r\n    this.checkPlayer(player);\r\n\r\n    board[square] = player;\r\n    if (player !== EMPTY) {\r\n      _moves++;\r\n    } else {\r\n      _moves--;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  isAboutToWin(player) {\r\n    this.checkPlayer(player);\r\n\r\n    const arr = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    let square0, square1, square2;\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      [square0, square1, square2] = arr[i];\r\n\r\n      if (\r\n        board[square0] === player &&\r\n        board[square1] === player &&\r\n        board[square2] === EMPTY\r\n      ) {\r\n        return square2;\r\n      }\r\n\r\n      if (\r\n        board[square0] === player &&\r\n        board[square1] === EMPTY &&\r\n        board[square2] === player\r\n      ) {\r\n        return square1;\r\n      }\r\n\r\n      if (\r\n        board[square0] === EMPTY &&\r\n        board[square1] === player &&\r\n        board[square2] === player\r\n      ) {\r\n        return square0;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  canWinInTwoMovesSingle = (player) => {\r\n    this.checkPlayer(player);\r\n\r\n    const arr = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    const result = [];\r\n    let square0, square1, square2;\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      [square0, square1, square2] = arr[i];\r\n\r\n      if (\r\n        board[square0] === player &&\r\n        board[square1] === EMPTY &&\r\n        board[square2] === EMPTY\r\n      ) {\r\n        result.push(square1);\r\n        result.push(square2);\r\n      }\r\n\r\n      if (\r\n        board[square0] === EMPTY &&\r\n        board[square1] === player &&\r\n        board[square2] === EMPTY\r\n      ) {\r\n        result.push(square0);\r\n        result.push(square2);\r\n      }\r\n\r\n      if (\r\n        board[square0] === EMPTY &&\r\n        board[square1] === EMPTY &&\r\n        board[square2] === player\r\n      ) {\r\n        result.push(square0);\r\n        result.push(square1);\r\n      }\r\n    }\r\n\r\n    if (result.length > 0) {\r\n      return result;\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  canWinInTwoMovesDouble = (player) => {\r\n    this.checkPlayer(player);\r\n\r\n    const arr = [\r\n      [0, 1, 2, 3, 6],\r\n      [0, 1, 2, 4, 8],\r\n      [0, 3, 6, 4, 8],\r\n      [2, 0, 1, 5, 8],\r\n      [2, 0, 1, 4, 6],\r\n      [2, 5, 8, 4, 6],\r\n      [6, 0, 3, 7, 8],\r\n      [6, 0, 3, 2, 4],\r\n      [6, 2, 4, 7, 8],\r\n      [8, 6, 7, 2, 5],\r\n      [8, 6, 7, 0, 4],\r\n      [8, 2, 5, 0, 4],\r\n      [1, 0, 2, 4, 7],\r\n      [3, 0, 6, 4, 5],\r\n      [5, 2, 8, 3, 4],\r\n      [7, 1, 4, 6, 8],\r\n    ];\r\n    const result = [];\r\n    let square0, square1, square2, square3, square4;\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      [square0, square1, square2, square3, square4] = arr[i];\r\n\r\n      if (\r\n        board[square0] === EMPTY &&\r\n        ((board[square1] === EMPTY && board[square2] === player) ||\r\n          (board[square1] === player && board[square2] === EMPTY)) &&\r\n        ((board[square3] === EMPTY && board[square4] === player) ||\r\n          (board[square3] === player && board[square4] === EMPTY))\r\n      ) {\r\n        result.push(square0);\r\n      }\r\n    }\r\n\r\n    if (result.length > 0) {\r\n      return result;\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  isAWinner(player) {\r\n    this.checkPlayer(player);\r\n\r\n    return (\r\n      (board[0] === player &&\r\n        board[1] === player &&\r\n        board[2] === player && [0, 1, 2]) ||\r\n      (board[3] === player &&\r\n        board[4] === player &&\r\n        board[5] === player && [3, 4, 5]) ||\r\n      (board[6] === player &&\r\n        board[7] === player &&\r\n        board[8] === player && [6, 7, 8]) ||\r\n      (board[0] === player &&\r\n        board[3] === player &&\r\n        board[6] === player && [0, 3, 6]) ||\r\n      (board[1] === player &&\r\n        board[4] === player &&\r\n        board[7] === player && [1, 4, 7]) ||\r\n      (board[2] === player &&\r\n        board[5] === player &&\r\n        board[8] === player && [2, 5, 8]) ||\r\n      (board[0] === player &&\r\n        board[4] === player &&\r\n        board[8] === player && [0, 4, 8]) ||\r\n      (board[2] === player &&\r\n        board[4] === player &&\r\n        board[6] === player && [2, 4, 6]) ||\r\n      []\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport Computer from \"../components/Board/Computer\";\r\nimport Board from \"../components/Board/Board\";\r\nimport { USER, COMPUTER, LOST, WON, DRAW } from \"../Constants\";\r\n\r\nconst board = new Board();\r\nconst computer = new Computer(board);\r\n\r\nlet over = false;\r\nlet player = \"\";\r\nlet result = \"\";\r\nlet winners = [];\r\n\r\nfunction useBoardUI({ disabled, first, level, images, category }, onGameOver) {\r\n  const categoryId = category.id;\r\n  const { user: imageUser, computer: imageComputer } = images;\r\n  const [players, setPlayers] = useState(board.players);\r\n\r\n  const play = useCallback((e) => {\r\n    if (!over) {\r\n      if (player === COMPUTER) {\r\n        computer.play();\r\n      } else {\r\n        board.place(USER, e.target.id);\r\n      }\r\n\r\n      setPlayers(board.players);\r\n\r\n      winners = board.isAWinner(player);\r\n      if (winners.length) {\r\n        over = true;\r\n        result = player === COMPUTER ? LOST : WON;\r\n      } else if (board.isFull) {\r\n        over = true;\r\n        result = DRAW;\r\n      } else {\r\n        player = player === COMPUTER ? USER : COMPUTER;\r\n        if (player === COMPUTER) {\r\n          play();\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (disabled) {\r\n      board.reset();\r\n      over = false;\r\n      player = \"\";\r\n      result = \"\";\r\n      winners = [];\r\n    } else {\r\n      setPlayers(board.players);\r\n    }\r\n  }, [disabled]);\r\n\r\n  useEffect(() => {\r\n    if (disabled === false) {\r\n      if (first === COMPUTER && !player) {\r\n        player = COMPUTER;\r\n        play();\r\n      } else {\r\n        player = USER;\r\n      }\r\n    }\r\n  }, [disabled, first, play]);\r\n\r\n  useEffect(() => {\r\n    if (disabled) {\r\n      board.level = level;\r\n      board.first = first;\r\n    }\r\n  }, [disabled, first, level]);\r\n\r\n  useEffect(() => {\r\n    if (over) {\r\n      onGameOver({\r\n        board: players,\r\n        categoryId,\r\n        first,\r\n        imageUser,\r\n        imageComputer,\r\n        level,\r\n        result,\r\n        winners,\r\n      });\r\n    }\r\n  }, [categoryId, first, imageUser, imageComputer, level, onGameOver, players]);\r\n\r\n  return {\r\n    over,\r\n    play,\r\n    players,\r\n    winners,\r\n  };\r\n}\r\n\r\nexport default useBoardUI;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GameContext } from \"../../contexts/GameContext\";\r\nimport Square from \"./Square\";\r\nimport useBoardUI from \"../../hooks/useBoardUI\";\r\nimport { EMPTY, USER, COMPUTER } from \"../../Constants\";\r\nimport \"./Board.scss\";\r\n\r\nconst BoardUI = ({ onGameOver = () => {} }) => {\r\n  const { game } = useContext(GameContext);\r\n  const { category, disabled, images } = game;\r\n  const { folder } = category;\r\n  const { user: imageUser, computer: imageComputer } = images;\r\n\r\n  const { over, play, players, winners } = useBoardUI(game, onGameOver);\r\n\r\n  const squares = players.map((player, ind) => {\r\n    const image =\r\n      player === COMPUTER\r\n        ? `${folder}%2F${imageComputer}`\r\n        : player === USER\r\n        ? `${folder}%2F${imageUser}`\r\n        : \"default\";\r\n    const isDisabled = disabled || over || player !== EMPTY ? true : false;\r\n    const win = over ? (winners.indexOf(ind) !== -1 ? \"win\" : \"\") : \"\";\r\n\r\n    return (\r\n      <Square\r\n        disabled={isDisabled}\r\n        id={ind}\r\n        image={image}\r\n        key={ind}\r\n        win={win}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"board\" onClick={play}>\r\n      {squares}\r\n    </div>\r\n  );\r\n};\r\n\r\nBoardUI.propTypes = {\r\n  onGameOver: PropTypes.func,\r\n};\r\n\r\nexport default BoardUI;\r\n","import { useCallback } from \"react\";\r\nimport { changeDisabled, changeOver } from \"../store/game/gameActions\";\r\nimport { addGame } from \"../store/gameDB/gameDBActions\";\r\n\r\nlet result = \"\";\r\n\r\nfunction useGame(dispatch, dispatchGame) {\r\n  const gameInitHandler = useCallback(() => {\r\n    dispatchGame(changeOver(false));\r\n    dispatchGame(changeDisabled(false));\r\n  }, [dispatchGame]);\r\n\r\n  const gameOverHandler = useCallback(\r\n    (game) => {\r\n      dispatchGame(changeOver(true));\r\n      dispatchGame(changeDisabled(true));\r\n      result = game.result;\r\n      dispatch(addGame(game));\r\n    },\r\n    [dispatch, dispatchGame]\r\n  );\r\n\r\n  return { gameInitHandler, gameOverHandler, result };\r\n}\r\n\r\nexport default useGame;\r\n","import { ADD_GAME, REMOVE_GAME } from \"./gameDBTypes\";\r\n\r\nexport const addGame = (game) => {\r\n  return {\r\n    type: ADD_GAME,\r\n    game,\r\n  };\r\n};\r\n\r\nexport const removeGame = (id) => {\r\n  return {\r\n    type: REMOVE_GAME,\r\n    id,\r\n  };\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GameDBContext } from \"../../contexts/GameDBContext\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport { GameContext } from \"../../contexts/GameContext\";\r\nimport Category from \"../Category/Category\";\r\nimport Images from \"../Images/Images\";\r\nimport StartGame from \"../StartGame/StartGame\";\r\nimport Level from \"../Level/Level\";\r\nimport BoardUI from \"../Board/BoardUI\";\r\nimport * as constants from \"../../Constants\";\r\nimport useGame from \"../../hooks/useGame\";\r\nimport \"./Game.scss\";\r\n\r\nconst { LOST, WON } = constants;\r\n\r\nconst Game = () => {\r\n  const { dispatch } = useContext(GameDBContext);\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  const { game, dispatch: dispatchGame } = useContext(GameContext);\r\n\r\n  const { gameInitHandler, gameOverHandler, result } = useGame(\r\n    dispatch,\r\n    dispatchGame\r\n  );\r\n\r\n  return dictionary ? (\r\n    <div className=\"game text-center\" data-testid=\"game\">\r\n      <Category />\r\n\r\n      <Images />\r\n\r\n      <div className=\"settings\">\r\n        <StartGame />\r\n        <Level />\r\n      </div>\r\n\r\n      <BoardUI onGameOver={gameOverHandler} />\r\n      <div className=\"board-footer\">\r\n        {game.over && (\r\n          <>\r\n            <span>{dictionary.GAME_OVER}: </span>\r\n            <span data-testid=\"message\">\r\n              {result === LOST\r\n                ? dictionary.MESSAGE_LOST\r\n                : result === WON\r\n                ? dictionary.MESSAGE_WON\r\n                : dictionary.MESSAGE_DRAW}\r\n            </span>\r\n          </>\r\n        )}\r\n\r\n        {((!result && game.disabled) || game.over) && (\r\n          <button\r\n            data-testid=\"play\"\r\n            className=\"play-again\"\r\n            onClick={gameInitHandler}\r\n          >\r\n            {game.over ? dictionary.PLAY_AGAIN : dictionary.PLAY}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\" data-testid=\"loading\">\r\n      Loading the game section of the page...\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Square from \"./Square\";\r\nimport * as constants from \"../../Constants\";\r\nimport \"./Board.scss\";\r\n\r\nconst COMPUTER = constants.COMPUTER;\r\nconst USER = constants.USER;\r\n\r\nconst Historical = ({ folder, imageUser, imageComputer, players, winners }) => {\r\n  const board = players.map((player, ind) => {\r\n    const image =\r\n      player === COMPUTER\r\n        ? `${folder}%2F${imageComputer}`\r\n        : player === USER\r\n        ? `${folder}%2F${imageUser}`\r\n        : \"default\";\r\n    const win = winners.indexOf(ind) !== -1 ? \"win\" : \"\";\r\n\r\n    return (\r\n      <Square disabled={true} id={ind} image={image} key={ind} win={win} />\r\n    );\r\n  });\r\n\r\n  return <div className=\"board\">{board}</div>;\r\n};\r\n\r\nHistorical.propTypes = {\r\n  folder: PropTypes.string,\r\n  imageUser: PropTypes.number,\r\n  imageComputer: PropTypes.number,\r\n  players: PropTypes.array,\r\n  winners: PropTypes.array,\r\n};\r\n\r\nexport default Historical;\r\n","import React, { useContext } from \"react\";\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport \"./Category.scss\";\r\n\r\nconst Historical = ({ categoryId }) => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const { dictionary } = useContext(DictionaryContext);\r\n\r\n  return dictionary && categories ? (\r\n    <div className=\"categories\">\r\n      <span>{dictionary.CATEGORY}: </span>\r\n      <span>{dictionary[categories[categoryId].name]}</span>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Historical;\r\n","import React, { useContext } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport \"./Images.scss\";\r\n\r\nconst Historical = ({ folder, imageUser, imageComputer }) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n\r\n  const url =\r\n    \"https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images\";\r\n\r\n  return dictionary ? (\r\n    <div className=\"images historical\">\r\n      <div className=\"user-image\">\r\n        <span>{dictionary.YOU}: </span>\r\n        <img\r\n          className=\"image-token\"\r\n          src={`${url}%2F${folder}%2F${imageUser}.jpg?alt=media`}\r\n          alt=\"user\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"computer-image\">\r\n        <span>{dictionary.OPPONENT}: </span>\r\n        <img\r\n          className=\"image-token\"\r\n          src={`${url}%2F${folder}%2F${imageComputer}.jpg?alt=media`}\r\n          alt=\"computer\"\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Historical;\r\n","import React, { useContext } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport { RANDOM, HARD } from \"../../Constants\";\r\nimport \"./Level.scss\";\r\n\r\nconst Historical = ({ level }) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n\r\n  return dictionary ? (\r\n    <div className=\"level\">\r\n      {dictionary.LEVEL}:&nbsp;\r\n      {level === RANDOM\r\n        ? dictionary.LEVEL_EASY\r\n        : level === HARD\r\n        ? dictionary.LEVEL_HARD\r\n        : dictionary.LEVEL_NORMAL}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Historical;\r\n","import React, { useContext } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport { COMPUTER } from \"../../Constants\";\r\nimport \"./StartGame.scss\";\r\n\r\nconst Historical = ({ first }) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n\r\n  return dictionary ? (\r\n    <div className=\"start\">\r\n      {dictionary.STARTED_BY}&nbsp;\r\n      {first === COMPUTER\r\n        ? dictionary.STARTED_BY_COMPUTER\r\n        : dictionary.STARTED_BY_PLAYER}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Historical;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport { GameDBContext } from \"../../contexts/GameDBContext\";\r\nimport BoardUI from \"../Board/Historical\";\r\nimport Category from \"../Category/Historical\";\r\nimport Images from \"../Images/Historical\";\r\nimport Level from \"../Level/Historical\";\r\nimport StartGame from \"../StartGame/Historical\";\r\nimport { removeGame } from \"../../store/gameDB/gameDBActions\";\r\nimport * as constants from \"../../Constants\";\r\nimport \"./Game.scss\";\r\n\r\nconst Historical = ({ game, history, match }) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  const { categories } = useContext(CategoryContext);\r\n  const { getGame, dispatch } = useContext(GameDBContext);\r\n  const { LOST, WON } = constants;\r\n\r\n  let id,\r\n    categoryId,\r\n    folder,\r\n    imageComputer,\r\n    imageUser,\r\n    first,\r\n    level,\r\n    players,\r\n    winners,\r\n    result;\r\n\r\n  game = history ? getGame(match.params.id * 1) : game;\r\n  ({\r\n    id,\r\n    categoryId,\r\n    imageComputer,\r\n    imageUser,\r\n    first,\r\n    level,\r\n    board: players,\r\n    winners,\r\n    result,\r\n  } = game);\r\n\r\n  folder = categories[categoryId].folder;\r\n  return categories && dictionary ? (\r\n    <div>\r\n      <Category categoryId={categoryId} />\r\n\r\n      <Images\r\n        imageUser={imageUser}\r\n        imageComputer={imageComputer}\r\n        folder={folder}\r\n      />\r\n\r\n      <div className=\"settings\">\r\n        <StartGame first={first} />\r\n        <Level level={level} />\r\n      </div>\r\n\r\n      {history && (\r\n        <BoardUI\r\n          imageUser={imageUser}\r\n          imageComputer={imageComputer}\r\n          players={players}\r\n          winners={winners}\r\n          folder={folder}\r\n        />\r\n      )}\r\n\r\n      <div className=\"board-footer\">\r\n        <span>\r\n          {result === LOST\r\n            ? dictionary.MESSAGE_LOST\r\n            : result === WON\r\n            ? dictionary.MESSAGE_WON\r\n            : dictionary.MESSAGE_DRAW}\r\n        </span>\r\n\r\n        <div className=\"buttons\">\r\n          {!history && (\r\n            <button className=\"see-game\">\r\n              <Link to={`/historical/${id}`}>{dictionary.SEE_GAME}</Link>\r\n            </button>\r\n          )}\r\n\r\n          <input\r\n            type=\"button\"\r\n            value={dictionary.DELETE_GAME}\r\n            onClick={(e) => {\r\n              dispatch(removeGame(id));\r\n              if (history) {\r\n                history.push(\"/historical\");\r\n              }\r\n            }}\r\n            className=\"delete-game\"\r\n          />\r\n\r\n          {history && (\r\n            <input\r\n              type=\"button\"\r\n              value={dictionary.BACK}\r\n              onClick={(e) => {\r\n                history.push(\"/historical\");\r\n              }}\r\n              className=\"back\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\">Loading the Historical page...</div>\r\n  );\r\n};\r\n\r\nHistorical.propTypes = {\r\n  game: PropTypes.object,\r\n  history: PropTypes.object,\r\n  match: PropTypes.object,\r\n};\r\n\r\nexport default Historical;\r\n","import React, { useContext } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport { GameDBContext } from \"../../contexts/GameDBContext\";\r\nimport GameHistorical from \"../Game/Historical\";\r\n\r\nconst Historical = () => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  const { games } = useContext(GameDBContext);\r\n  let historical;\r\n\r\n  if (dictionary) {\r\n    if (games && games.length > 0) {\r\n      historical = games.map((game) => {\r\n        return <GameHistorical key={game.id} game={game} />;\r\n      });\r\n    } else {\r\n      historical = (\r\n        <div className=\"board-footer\">\r\n          {dictionary && dictionary.NO_HISTORY_YET}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div className=\"text-center\">{historical}</div>;\r\n  } else {\r\n    return <div className=\"loading\">Loading the Historical page...</div>;\r\n  }\r\n};\r\n\r\nexport default Historical;\r\n","import React, { useContext } from \"react\";\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { GameContext } from \"../../contexts/GameContext\";\r\nimport Category from \"../Category/Category\";\r\nimport \"./Repository.scss\";\r\n\r\nconst Repository = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const { game } = useContext(GameContext);\r\n  const folder = game.category.folder;\r\n  const url =\r\n    \"https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images\";\r\n\r\n  return categories ? (\r\n    <div className=\"repository\" data-testid=\"repository\">\r\n      <Category />\r\n      <div className=\"repository-images\" data-testid=\"images\">\r\n        {Array(~~20)\r\n          .fill(1)\r\n          .map((value, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <img\r\n                  src={`${url}%2F${folder}%2F${index}.jpg?alt=media`}\r\n                  alt=\"user\"\r\n                  data-testid=\"image\"\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\" data-testid=\"loading\">\r\n      Loading the Repository page...\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Repository;\r\n","import React, { useContext } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport \"./About.scss\";\r\n\r\nconst About = () => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n\r\n  const techStack = [\r\n    { name: \"React.js\", url: \"https://reactjs.org/\" },\r\n    { name: \"React Hooks\", url: \"https://reactjs.org/docs/hooks-intro.html\" },\r\n    { name: \"Context API\", url: \"https://reactjs.org/docs/context.html\" },\r\n    {\r\n      name: \"Local Storage\",\r\n      url: \"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\",\r\n    },\r\n    { name: \"Firebase\", url: \"https://firebase.google.com/docs\" },\r\n    {\r\n      name: \"Javascript\",\r\n      url: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript\",\r\n    },\r\n    { name: \"ES6\", url: \"http://es6-features.org\" },\r\n    {\r\n      name: \"HTML5\",\r\n      url: \"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5\",\r\n    },\r\n    { name: \"CSS3\", url: \"https://www.w3.org/TR/selectors-3/\" },\r\n    { name: \"SASS\", url: \"https://sass-lang.com/\" },\r\n    { name: \"Jest\", url: \"https://jestjs.io/\" },\r\n    {\r\n      name: \"React Testing Library \",\r\n      url: \"https://testing-library.com/docs/react-testing-library/intro/\",\r\n    },\r\n  ];\r\n\r\n  const techStackLi = techStack.map((tech, key) => {\r\n    return (\r\n      <li key={key}>\r\n        <a target=\"_blank\" href={tech.url} rel=\"noopener noreferrer\">\r\n          {tech.name}\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const source = \"https://github.com/lojito/tic-tac-toe\";\r\n\r\n  const games = [\r\n    { name: \"Puzzle (Angular)\", url: \"https://github.com/lojito/puzzle\" },\r\n    {\r\n      name: \"Matching pairs (Vue.js)\",\r\n      url: \"https://github.com/lojito/matching-pairs\",\r\n    },\r\n    {\r\n      name: \"Tic-tac-toe 4x4 (Django)\",\r\n      url: \"https://github.com/lojito/django-tictactoe\",\r\n    },\r\n    {\r\n      name: \"Tic-tac-toe (Python)\",\r\n      url: \"https://github.com/lojito/python-tic-tac-toe\",\r\n    },\r\n    {\r\n      name: \"Base converter (Rust)\",\r\n      url: \"https://github.com/lojito/baseconverter\",\r\n    },\r\n    {\r\n      name: \"UEFA Champions League (C)\",\r\n      url: \"https://github.com/lojito/c_champions_league\",\r\n    },\r\n    {\r\n      name: \"Bubble sort sorting algorithm (Assembly)\",\r\n      url: \"https://github.com/lojito/assembly-bubble-sort\",\r\n    },\r\n  ];\r\n\r\n  const gamesLi = games.map((game, key) => {\r\n    return (\r\n      <li key={key}>\r\n        <a target=\"_blank\" href={game.url} rel=\"noopener noreferrer\">\r\n          {game.name}\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return dictionary ? (\r\n    <div className=\"about\" data-testid=\"about\">\r\n      <div>\r\n        <span data-testid=\"gameWrittenWith\">\r\n          {dictionary.GAME_WRITTEN_WITH}\r\n        </span>\r\n        <ul data-testid=\"techStack\">{techStackLi}</ul>\r\n      </div>\r\n      <div>\r\n        <span data-testid=\"sourceCode\">{dictionary.SOURCE_CODE}</span>&nbsp;\r\n        <ul data-testid=\"source\">\r\n          <li>\r\n            <a target=\"_blank\" href={source} rel=\"noopener noreferrer\">\r\n              {source}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <span data-testid=\"otherGames\">{dictionary.OTHER_GAMES}</span>\r\n      <ul data-testid=\"games\">{gamesLi}</ul>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\" data-testid=\"loading\">\r\n      Loading the About page...\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useContext } from \"react\";\r\nimport { DictionaryContext } from \"../../contexts/DictionaryContext\";\r\nimport \"./Contact.scss\";\r\n\r\nconst Contact = () => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n\r\n  const contact = {\r\n    author: \"Livan Ojito Villanueva\",\r\n    email: \"livanojito@gmail.com\",\r\n    github: \"https://github.com/lojito\",\r\n    linkedin: \"https://ca.linkedin.com/in/lov\",\r\n  };\r\n\r\n  return dictionary ? (\r\n    <div className=\"contact\" data-testid=\"contact\">\r\n      <p>\r\n        <span data-testid=\"authorDescription\">{dictionary.AUTHOR} </span>\r\n        <span data-testid=\"author\" className=\"me\">\r\n          {contact.author}\r\n        </span>\r\n      </p>\r\n      <p>\r\n        <span data-testid=\"emailDescription\">{dictionary.EMAIL} </span>\r\n        <span data-testid=\"email\" className=\"me\">\r\n          {contact.email}\r\n        </span>\r\n      </p>\r\n      <p>\r\n        <span data-testid=\"githubDescription\">{dictionary.GITHUB} </span>\r\n        <a\r\n          data-testid=\"github\"\r\n          target=\"_blank\"\r\n          href={contact.github}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {contact.github}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        <span data-testid=\"linkedinDescription\">{dictionary.LINKEDIN} </span>\r\n        <a\r\n          data-testid=\"linkedin\"\r\n          target=\"_blank\"\r\n          href={contact.linkedin}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {contact.linkedin}\r\n        </a>\r\n      </p>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\" data-testid=\"loading\">\r\n      Loading the Contact page...\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport GameContextProvider from \"./contexts/GameContext\";\r\nimport GameDBContextProvider from \"./contexts/GameDBContext\";\r\nimport DictionaryContextProvider from \"./contexts/DictionaryContext\";\r\nimport CategoryContextProvider from \"./contexts/CategoryContext\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport Game from \"./components/Game/Game\";\r\nimport GameHistorical from \"./components/Game/Historical\";\r\nimport Historical from \"./components/Historical/Historical\";\r\nimport Repository from \"./components/Repository/Repository\";\r\nimport About from \"./components/About/About\";\r\nimport Contact from \"./components/Contact/Contact\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"/tic-tac-toe\">\r\n      <DictionaryContextProvider>\r\n        <div className=\"header\">\r\n          <Header />\r\n          <Navigation />\r\n        </div>\r\n        <CategoryContextProvider>\r\n          <GameDBContextProvider>\r\n            <GameContextProvider>\r\n              <Switch>\r\n                <Route path=\"/\" exact component={Game} />\r\n                <Route path=\"/historical\" exact component={Historical} />\r\n                <Route path=\"/repository\" component={Repository} />\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/contact\" component={Contact} />\r\n                <Route path=\"/historical/:id\" component={GameHistorical} />\r\n              </Switch>\r\n            </GameContextProvider>\r\n          </GameDBContextProvider>\r\n        </CategoryContextProvider>\r\n      </DictionaryContextProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}